{"ast":null,"code":"export const validateUsername = username => {\n  const regex = /^[a-z]{6,10}$/;\n  return regex.test(username);\n};\nexport const validatePassword = password => {\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,10}$/;\n  return regex.test(password);\n};\nexport const validateName = name => {\n  if (!name) {\n    return \"-- Name can't be empty --\";\n  }\n  if (name.length > 20) {\n    return \"-- Name can't have more than 20 characters --\";\n  }\n  return \"\";\n};\nexport const validateSummary = summary => {\n  if (summary.length < 10 || summary.length > 100) {\n    return \"-- Summary must be between 10 and 100 characters --\";\n  }\n  return \"\";\n};\nexport const validatePlatforms = platforms => {\n  if (platforms.length === 0) {\n    return \"-- Need to choose at least one platform --\";\n  }\n  return \"\";\n};\nexport const validateRating = rating => {\n  if (!rating) {\n    return \"-- Rating can't be empty --\";\n  } else if (rating < 0 || rating > 5) {\n    return \"-- Rating needs to be higher than 0 and lower than 5 --\";\n  }\n  return \"\";\n};\nexport const validateReleaseDate = released => {\n  if (!released) {\n    return \"-- Release date can't be empty --\";\n  }\n  return \"\";\n};\nexport const validateGenres = genres => {\n  if (genres.length === 0) {\n    return \"-- Need to choose at least one genre --\";\n  }\n  return \"\";\n};\nexport const validateDate = date => {\n  if (date.length === 0) {\n    return \"-- Date can't be empty --\";\n  } else {\n    const input = new Date(date);\n    const today = new Date();\n    const limit = new Date(\"1952-01-01\");\n    console.log(input, today, limit);\n    if (input > limit && input <= today) {\n      return \"\";\n    } else {\n      return \"-- The release is not valid --\";\n    }\n  }\n};","map":{"version":3,"names":["validateUsername","username","regex","test","validatePassword","password","validateName","name","length","validateSummary","summary","validatePlatforms","platforms","validateRating","rating","validateReleaseDate","released","validateGenres","genres","validateDate","date","input","Date","today","limit","console","log"],"sources":["C:/Users/CastroLuna/Documents/Desarrollo/B/PI/VIDEO_GAME_PAGE_PI/client/src/components/Form/validations.js"],"sourcesContent":["export const validateUsername = (username)=>{\n  const regex = /^[a-z]{6,10}$/\n return regex.test(username)\n}\n\nexport const validatePassword = (password)=>{\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,10}$/\n  return regex.test(password)\n}\n\nexport const validateName = (name) => {\n  if (!name) {\n    return \"-- Name can't be empty --\";\n  }\n  if (name.length > 20) {\n    return \"-- Name can't have more than 20 characters --\";\n  }\n  return \"\";\n};\n\nexport const validateSummary = (summary) => {\n  if (summary.length < 10 || summary.length > 100) {\n    return \"-- Summary must be between 10 and 100 characters --\";\n  }\n  return \"\";\n};\n\nexport const validatePlatforms = (platforms) => {\n  if (platforms.length === 0) {\n    return \"-- Need to choose at least one platform --\";\n  }\n  return \"\";\n};\n\nexport const validateRating = (rating) => {\n  if(!rating){return \"-- Rating can't be empty --\"}else\n  if (rating < 0 || rating > 5) {\n    return \"-- Rating needs to be higher than 0 and lower than 5 --\";\n  }\n  return \"\";\n};\n\nexport const validateReleaseDate = (released) => {\n  if (!released) {\n    return \"-- Release date can't be empty --\";\n  }\n  return \"\";\n};\n\nexport const validateGenres = (genres) => {\n  if (genres.length === 0) {\n    return \"-- Need to choose at least one genre --\";\n  }\n  return \"\";\n};\n\nexport const validateDate = (date) => {\n\n  if(date.length===0){return \"-- Date can't be empty --\"}else{\n   const input = new Date(date)\n  const today = new Date()\n  const limit = new Date(\"1952-01-01\")\n      console.log(input, today,limit)\n  if(input>limit && input <=today){\n      return \"\"\n  }else{\n      return \"-- The release is not valid --\"\n  }   \n  }\n\n  \n}"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAIC,QAAQ,IAAG;EAC1C,MAAMC,KAAK,GAAG,eAAe;EAC9B,OAAOA,KAAK,CAACC,IAAI,CAACF,QAAQ,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAIC,QAAQ,IAAG;EAC1C,MAAMH,KAAK,GAAG,kDAAkD;EAChE,OAAOA,KAAK,CAACC,IAAI,CAACE,QAAQ,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC,IAAI,CAACA,IAAI,EAAE;IACT,OAAO,2BAA2B;EACpC;EACA,IAAIA,IAAI,CAACC,MAAM,GAAG,EAAE,EAAE;IACpB,OAAO,+CAA+C;EACxD;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIC,OAAO,IAAK;EAC1C,IAAIA,OAAO,CAACF,MAAM,GAAG,EAAE,IAAIE,OAAO,CAACF,MAAM,GAAG,GAAG,EAAE;IAC/C,OAAO,qDAAqD;EAC9D;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAIC,SAAS,IAAK;EAC9C,IAAIA,SAAS,CAACJ,MAAM,KAAK,CAAC,EAAE;IAC1B,OAAO,4CAA4C;EACrD;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,MAAM,IAAK;EACxC,IAAG,CAACA,MAAM,EAAC;IAAC,OAAO,6BAA6B;EAAA,CAAC,MACjD,IAAIA,MAAM,GAAG,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;IAC5B,OAAO,yDAAyD;EAClE;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,QAAQ,IAAK;EAC/C,IAAI,CAACA,QAAQ,EAAE;IACb,OAAO,mCAAmC;EAC5C;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK;EACxC,IAAIA,MAAM,CAACV,MAAM,KAAK,CAAC,EAAE;IACvB,OAAO,yCAAyC;EAClD;EACA,OAAO,EAAE;AACX,CAAC;AAED,OAAO,MAAMW,YAAY,GAAIC,IAAI,IAAK;EAEpC,IAAGA,IAAI,CAACZ,MAAM,KAAG,CAAC,EAAC;IAAC,OAAO,2BAA2B;EAAA,CAAC,MAAI;IAC1D,MAAMa,KAAK,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IAC7B,MAAMG,KAAK,GAAG,IAAID,IAAI,EAAE;IACxB,MAAME,KAAK,GAAG,IAAIF,IAAI,CAAC,YAAY,CAAC;IAChCG,OAAO,CAACC,GAAG,CAACL,KAAK,EAAEE,KAAK,EAACC,KAAK,CAAC;IACnC,IAAGH,KAAK,GAACG,KAAK,IAAIH,KAAK,IAAGE,KAAK,EAAC;MAC5B,OAAO,EAAE;IACb,CAAC,MAAI;MACD,OAAO,gCAAgC;IAC3C;EACA;AAGF,CAAC"},"metadata":{},"sourceType":"module"}