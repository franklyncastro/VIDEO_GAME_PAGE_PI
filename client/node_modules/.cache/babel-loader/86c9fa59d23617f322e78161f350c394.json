{"ast":null,"code":"import { GET_ALL_GAMES, GET_ALLGAMES_NAME, GET_DETAIL_GAMES, CLEAN_DETAIL, LOAD_GENRES, LOADING, ORDER_GAMES, FILTER_TYPE, FILTER_GENRES, CLEAN_FILTER, RESET_FILTER, CLEAN_RTA } from \"./actions-types\";\nconst initialState = {\n  allGames: [],\n  genres: [],\n  detail: {},\n  rta: [],\n  filter_type: \"\",\n  filter_genre: \"\",\n  loading: false,\n  URL: 'http://localhost:3001/videogames'\n};\nconst filterGenre = (arr, action) => {\n  let search = arr.map(data => {\n    let result = data.genres.filter(genre => genre.name === action);\n    let obj = {\n      name: data.name,\n      image: data.image,\n      id: data.id,\n      genres: result\n    };\n    return obj;\n  });\n  return search.filter(clear => {\n    var _clear$genres;\n    return ((_clear$genres = clear.genres) === null || _clear$genres === void 0 ? void 0 : _clear$genres.length) > 0;\n  });\n};\nconst filter = state => {\n  state.rta = state.allGames; // reset\n  let filter = [];\n  console.log(\"reset\");\n  if (state.filter_type.length > 0) {\n    console.log(\"filter type\");\n    if (state.filter_type === \"api\") {\n      console.log(\"filter api\");\n      filter = state.rta.filter(data => !isNaN(data.id));\n    } else {\n      console.log(\"Db filter\");\n      filter = state.rta.filter(data => isNaN(data.id));\n    }\n  }\n  if (state.filter_genre.length > 0 && filter.length === 0) {\n    filter = filterGenre(state.rta, state.filter_genre);\n  }\n  if (state.filter_genre.length > 0 && filter.length > 0) {\n    filter = filterGenre(filter, state.filter_genre);\n  }\n  return filter;\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n  switch (actions.type) {\n    case GET_ALL_GAMES:\n      return {\n        ...state,\n        loading: false,\n        allGames: actions.payload,\n        rta: actions.payload\n      };\n    case GET_ALLGAMES_NAME:\n      return {\n        ...state,\n        rta: actions.payload\n      };\n    case GET_DETAIL_GAMES:\n      return {\n        ...state,\n        loading: false,\n        rta: [],\n        filter_type: \"\",\n        filter_genre: \"\",\n        detail: actions.payload\n      };\n    case LOAD_GENRES:\n      return {\n        ...state,\n        genres: actions.payload,\n        filtered_genres: actions.payload\n      };\n    case FILTER_TYPE:\n      {\n        state.filter_type = actions.payload;\n        let filters = filter(state, actions);\n        return {\n          ...state,\n          rta: filters\n        };\n      }\n    case FILTER_GENRES:\n      state.filter_genre = actions.payload;\n      let filters = filter(state, actions);\n      return {\n        ...state,\n        rta: filters\n      };\n    case ORDER_GAMES:\n      {\n        const order = [...state.rta];\n        if (actions.payload === \"Ascendente\") {\n          order.sort((a, b) => a.name.localeCompare(b.name));\n        } else {\n          order.sort((a, b) => b.name.localeCompare(a.name));\n        }\n        return {\n          ...state,\n          rta: order\n        };\n      }\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case CLEAN_RTA:\n      return {\n        ...state,\n        rta: []\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    case CLEAN_FILTER:\n      return {\n        ...state,\n        filter_type: \"\",\n        filter_genre: \"\"\n      };\n    case RESET_FILTER:\n      return {\n        ...state,\n        filter_type: \"\",\n        filter_genre: \"\",\n        rta: state.allGames\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["GET_ALL_GAMES","GET_ALLGAMES_NAME","GET_DETAIL_GAMES","CLEAN_DETAIL","LOAD_GENRES","LOADING","ORDER_GAMES","FILTER_TYPE","FILTER_GENRES","CLEAN_FILTER","RESET_FILTER","CLEAN_RTA","initialState","allGames","genres","detail","rta","filter_type","filter_genre","loading","URL","filterGenre","arr","action","search","map","data","result","filter","genre","name","obj","image","id","clear","_clear$genres","length","state","console","log","isNaN","reducer","arguments","undefined","actions","type","payload","filtered_genres","filters","order","sort","a","b","localeCompare"],"sources":["C:/Users/CastroLuna/Documents/Desarrollo/B/PI/VIDEO_GAME_PAGE_PI/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_ALL_GAMES,\r\n  GET_ALLGAMES_NAME,\r\n  GET_DETAIL_GAMES,\r\n  CLEAN_DETAIL,\r\n  LOAD_GENRES,\r\n  LOADING,\r\n  ORDER_GAMES,\r\n  FILTER_TYPE,\r\n  FILTER_GENRES,\r\n  CLEAN_FILTER,\r\n  RESET_FILTER,\r\n  CLEAN_RTA,\r\n} from \"./actions-types\";\r\n\r\nconst initialState = {\r\n  allGames: [],\r\n  genres: [],\r\n  detail: {},\r\n  rta: [],\r\n  filter_type: \"\",\r\n  filter_genre: \"\",\r\n  loading: false,\r\n  URL: 'http://localhost:3001/videogames'\r\n};\r\n\r\n\r\n\r\nconst filterGenre = (arr, action) => {\r\n  let search = arr.map((data) => {\r\n    let result = data.genres.filter((genre) => genre.name === action);\r\n\r\n    let obj = {\r\n      name: data.name,\r\n      image: data.image,\r\n      id: data.id,\r\n      genres: result,\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  return search.filter((clear) => clear.genres?.length > 0);\r\n};\r\n\r\nconst filter = (state) => {\r\n  state.rta = state.allGames; // reset\r\n  let filter = [];\r\n  console.log(\"reset\");\r\n  if (state.filter_type.length > 0) {\r\n    console.log(\"filter type\");\r\n    if (state.filter_type === \"api\") {\r\n      console.log(\"filter api\");\r\n      filter = state.rta.filter((data) => !isNaN(data.id));\r\n    } else {\r\n      console.log(\"Db filter\");\r\n      filter = state.rta.filter((data) => isNaN(data.id));\r\n    }\r\n  }\r\n\r\n  if (state.filter_genre.length > 0 && filter.length === 0) {\r\n    filter = filterGenre(state.rta, state.filter_genre);\r\n  }\r\n  if (state.filter_genre.length > 0 && filter.length > 0) {\r\n    filter = filterGenre(filter, state.filter_genre);\r\n  }\r\n\r\n  return filter;\r\n};\r\n\r\nconst reducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case GET_ALL_GAMES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        allGames: actions.payload,\r\n        rta: actions.payload,\r\n      };\r\n    case GET_ALLGAMES_NAME:\r\n      return {\r\n        ...state,\r\n        rta: actions.payload,\r\n      };\r\n    case GET_DETAIL_GAMES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rta: [],\r\n        filter_type: \"\",\r\n        filter_genre: \"\",\r\n        detail: actions.payload,\r\n      };\r\n\r\n    case LOAD_GENRES:\r\n      return {\r\n        ...state,\r\n        genres: actions.payload,\r\n        filtered_genres: actions.payload,\r\n      };\r\n\r\n    case FILTER_TYPE: {\r\n      state.filter_type = actions.payload;\r\n      let filters = filter(state, actions);\r\n      return {\r\n        ...state,\r\n        rta: filters,\r\n      };\r\n    }\r\n\r\n    case FILTER_GENRES:\r\n      state.filter_genre = actions.payload;\r\n      let filters = filter(state, actions);\r\n      return {\r\n        ...state,\r\n        rta: filters,\r\n      };\r\n    case ORDER_GAMES: {\r\n      const order = [...state.rta];\r\n\r\n      if (actions.payload === \"Ascendente\") {\r\n        order.sort((a, b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        order.sort((a, b) => b.name.localeCompare(a.name));\r\n      }\r\n      return {\r\n        ...state,\r\n        rta: order,\r\n      };\r\n    }\r\n\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case CLEAN_RTA:\r\n      return {\r\n        ...state,\r\n        rta: [],\r\n      };\r\n    case CLEAN_DETAIL:\r\n      return {\r\n        ...state,\r\n        detail: {},\r\n      };\r\n    case CLEAN_FILTER:\r\n      return {\r\n        ...state,\r\n        filter_type: \"\",\r\n        filter_genre: \"\",\r\n      };\r\n\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter_type: \"\",\r\n        filter_genre: \"\",\r\n        rta: state.allGames,\r\n      };\r\n\r\n    default:\r\n      return {\r\n        ...state,\r\n      };\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}