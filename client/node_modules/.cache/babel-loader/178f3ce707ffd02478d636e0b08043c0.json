{"ast":null,"code":"import { GET_ALL_GAMES, GET_ALLGAMES_NAME, GET_DETAIL_GAMES, CLEAN_DETAIL, LOAD_GENRES, LOADING, ORDER_GAMES, FILTER_TYPE, FILTER_GENRES, CLEAN_FILTER, RESET_FILTER, CLEAN_RTA } from \"./actions-types\";\nconst initialState = {\n  allGames: [],\n  genres: [],\n  // Fixed typo in Adventure\n  detail: {},\n  loading: false,\n  rta: [],\n  filter_type: \"\",\n  filter_genre: null,\n  URL: \"http://localhost:3001/videogames\"\n};\n\n// Moved filter_Genres function to top of file\nconst filter_Genres = (arr, action) => {\n  let search = arr.map(data => {\n    let confirmGenre = data.genres.filter(genre => genre.name === action);\n    let obj = {\n      name: data.name,\n      image: data.image,\n      id: data.id,\n      genres: confirmGenre\n    };\n    return obj;\n  });\n  return search.filter(clear => clear.genres.length > 0);\n};\nconst Filter = (state, actions) => {\n  state.rta = state.allGames;\n  let filter = [];\n  if (state.filter_type.length > 0) {\n    console.log(\"Filtrando por tipo\");\n    if (state.filter_type === \"api\") {\n      console.log(\"Filtrando por tipo: api\");\n      filter = state.rta.filter(dato => !isNaN(dato.id));\n    } else {\n      console.log(\"Filtrando por tipo: db\");\n      filter = state.rta.filter(dato => isNaN(dato.id));\n    }\n  }\n  if (state.filter_genre && state.filter_genre.length > 0 && filter.length === 0) {\n    console.log(\"Filtrando por género\");\n    filter = filter_Genres(state.rta, state.filter_genre);\n  }\n  if (state.filter_genre && state.filter_genre.length > 0 && filter.length > 0) {\n    console.log(\"Filtrando por género compuesto\");\n    filter = filter_Genres(filter, state.filter_genre);\n  }\n  return filter;\n};\n_c = Filter;\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      return {\n        ...state,\n        loading: false,\n        allGames: action.payload,\n        rta: action.payload\n      };\n    case GET_ALLGAMES_NAME:\n      return {\n        ...state,\n        rta: action.payload\n      };\n    case GET_DETAIL_GAMES:\n      return {\n        ...state,\n        loading: false,\n        rta: [],\n        filter_type: \"\",\n        filter_genre: null,\n        // Fixed to use null instead of empty string\n        detail: action.payload\n      };\n    case LOAD_GENRES:\n      return {\n        ...state,\n        genres: action.payload,\n        filtered_genres: action.payload\n      };\n    case FILTER_TYPE:\n      {\n        state.filter_type = action.payload;\n        let filtered = Filter(state, action);\n        return {\n          ...state,\n          rta: filtered\n        };\n      }\n    //\n\n    case FILTER_GENRES:\n      state.filter_genre = action.payload;\n      let filtered = Filter(state, action);\n      return {\n        ...state,\n        rta: filtered\n      };\n    case ORDER_GAMES:\n      {\n        const order = [...state.rta];\n        if (action.payload === \"Ascendente\") {\n          order.sort((a, b) => a.name.localeCompare(b.name));\n        } else {\n          order.sort((a, b) => b.name.localeCompare(a.name));\n        }\n        return {\n          ...state,\n          rta: order\n        };\n      }\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case CLEAN_RTA:\n      return {\n        ...state,\n        rta: []\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    case CLEAN_FILTER:\n      return {\n        ...state,\n        filter_type: \"\",\n        filter_genre: null // Fixed to use null instead of empty string\n      };\n\n    case RESET_FILTER:\n      return {\n        ...state,\n        filter_type: \"\",\n        filter_genre: null,\n        // Fixed to use null instead of empty string\n        rta: state.allGames\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["GET_ALL_GAMES","GET_ALLGAMES_NAME","GET_DETAIL_GAMES","CLEAN_DETAIL","LOAD_GENRES","LOADING","ORDER_GAMES","FILTER_TYPE","FILTER_GENRES","CLEAN_FILTER","RESET_FILTER","CLEAN_RTA","initialState","allGames","genres","detail","loading","rta","filter_type","filter_genre","URL","filter_Genres","arr","action","search","map","data","confirmGenre","filter","genre","name","obj","image","id","clear","length","Filter","state","actions","console","log","dato","isNaN","_c","reducer","arguments","undefined","type","payload","filtered_genres","filtered","order","sort","a","b","localeCompare","$RefreshReg$"],"sources":["C:/Users/CastroLuna/Documents/Desarrollo/B/PI/VIDEO_GAME_PAGE_PI/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_ALL_GAMES,\r\n  GET_ALLGAMES_NAME,\r\n  GET_DETAIL_GAMES,\r\n  CLEAN_DETAIL,\r\n  LOAD_GENRES,\r\n  LOADING,\r\n  ORDER_GAMES,\r\n  FILTER_TYPE,\r\n  FILTER_GENRES,\r\n  CLEAN_FILTER,\r\n  RESET_FILTER,\r\n  CLEAN_RTA,\r\n} from \"./actions-types\";\r\n\r\nconst initialState = {\r\n  allGames: [],\r\n  genres: [], // Fixed typo in Adventure\r\n  detail: {},\r\n  loading: false,\r\n  rta: [],\r\n  filter_type: \"\",\r\n  filter_genre: null,\r\n  URL: \"http://localhost:3001/videogames\",\r\n};\r\n\r\n// Moved filter_Genres function to top of file\r\nconst filter_Genres = (arr, action) => {\r\n  let search = arr.map((data) => {\r\n    let confirmGenre = data.genres.filter((genre) => genre.name === action);\r\n    let obj = {\r\n      name: data.name,\r\n      image: data.image,\r\n      id: data.id,\r\n      genres: confirmGenre,\r\n    };\r\n    return (obj);\r\n  });\r\n\r\n  return search.filter((clear) => clear.genres.length > 0);\r\n};\r\n\r\nconst Filter = (state, actions) => {\r\n  state.rta = state.allGames;\r\n  let filter = [];\r\n\r\n  if (state.filter_type.length > 0) {\r\n    console.log(\"Filtrando por tipo\");\r\n    if (state.filter_type === \"api\") {\r\n      console.log(\"Filtrando por tipo: api\");\r\n      filter = state.rta.filter((dato) => !isNaN(dato.id));\r\n    } else {\r\n      console.log(\"Filtrando por tipo: db\");\r\n      filter = state.rta.filter((dato) => isNaN(dato.id));\r\n    }\r\n  }\r\n\r\n  if (\r\n    state.filter_genre &&\r\n    state.filter_genre.length > 0 &&\r\n    filter.length === 0\r\n  ) {\r\n    console.log(\"Filtrando por género\");\r\n    filter = filter_Genres(state.rta, state.filter_genre);\r\n  }\r\n\r\n  if (\r\n    state.filter_genre &&\r\n    state.filter_genre.length > 0 &&\r\n    filter.length > 0\r\n  ) {\r\n    console.log(\"Filtrando por género compuesto\");\r\n    filter = filter_Genres(filter, state.filter_genre);\r\n  }\r\n\r\n  return filter;\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_GAMES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        allGames: action.payload,\r\n        rta: action.payload,\r\n      };\r\n\r\n    case GET_ALLGAMES_NAME:\r\n      return {\r\n        ...state,\r\n        rta: action.payload,\r\n      };\r\n\r\n    case GET_DETAIL_GAMES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rta: [],\r\n        filter_type: \"\",\r\n        filter_genre: null, // Fixed to use null instead of empty string\r\n        detail: action.payload,\r\n      };\r\n\r\n    case LOAD_GENRES:\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n        filtered_genres: action.payload,\r\n      };\r\n\r\n    \r\n      case FILTER_TYPE:{\r\n        state.filter_type=action.payload\r\n        let filtered = Filter(state,action)\r\n        return{\r\n            ...state,\r\n            rta: filtered,\r\n        }\r\n    }//\r\n      \r\n\r\n    case FILTER_GENRES:\r\n            state.filter_genre = action.payload\r\n            let filtered = Filter(state,action)\r\n            return{\r\n                ...state,\r\n                rta:filtered,\r\n            }\r\n\r\n    case ORDER_GAMES: {\r\n      const order = [...state.rta];\r\n      if (action.payload === \"Ascendente\") {\r\n        order.sort((a, b) => a.name.localeCompare(b.name));\r\n      } else {\r\n        order.sort((a, b) => b.name.localeCompare(a.name));\r\n      }\r\n      return {\r\n        ...state,\r\n        rta: order,\r\n      };\r\n    }\r\n\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case CLEAN_RTA:\r\n      return {\r\n        ...state,\r\n        rta: [],\r\n      };\r\n\r\n    case CLEAN_DETAIL:\r\n      return {\r\n        ...state,\r\n        detail: {},\r\n      };\r\n\r\n    case CLEAN_FILTER:\r\n      return {\r\n        ...state,\r\n        filter_type: \"\",\r\n        filter_genre: null, // Fixed to use null instead of empty string\r\n      };\r\n\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter_type: \"\",\r\n        filter_genre: null, // Fixed to use null instead of empty string\r\n        rta: state.allGames,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}