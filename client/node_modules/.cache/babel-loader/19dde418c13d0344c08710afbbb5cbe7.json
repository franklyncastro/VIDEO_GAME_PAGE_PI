{"ast":null,"code":"import { GET_ALL_GAMES, GET_ALLGAMES_NAME, GET_DETAIL_GAMES, CLEAN_DETAIL, LOAD_GENRES, LOADING, ORDER_GAMES, FILTER_TYPE, FILTER_GENRES, CLEAN_FILTER, RESET_FILTER, CLEAN_RTA } from \"./actions-types\";\nconst initialState = {\n  allGames: [],\n  genres: [],\n  detail: {},\n  loading: false,\n  rta: [],\n  filter_type: \"\",\n  filter_genre: \"\",\n  URL: 'http://localhost:3001/videogames'\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_GAMES:\n      return {\n        ...state,\n        loading: false,\n        allGames: action.payload,\n        rta: action.payload\n      };\n    case GET_ALLGAMES_NAME:\n      return {\n        ...state,\n        rta: action.payload\n      };\n    case GET_DETAIL_GAMES:\n      return {\n        ...state,\n        loading: false,\n        rta: [],\n        filter_type: \"\",\n        filter_genre: \"\",\n        detail: action.payload\n      };\n    case LOAD_GENRES:\n      return {\n        ...state,\n        genres: action.payload,\n        filtered_genres: action.payload\n      };\n    case FILTER_TYPE:\n      {\n        const filter_type = action.payload;\n        const filters = filter(state, filter_type, state.filter_genre);\n        return {\n          ...state,\n          rta: filters,\n          filter_type\n        };\n      }\n    case FILTER_GENRES:\n      {\n        const {\n          genre\n        } = action.payload;\n        console.log(genre);\n        const filteredResults = filter(state, state.filter_type, genre);\n        return {\n          ...state,\n          filteredResults,\n          filterGenre: genre\n        };\n      }\n    case ORDER_GAMES:\n      {\n        const order = [...state.rta];\n        if (action.payload === \"Ascendente\") {\n          order.sort((a, b) => a.id - b.id);\n        } else if (action.payload === \"Descendente\") {\n          order.sort((a, b) => b.id - a.id);\n        }\n        return {\n          ...state,\n          rta: order\n        };\n      }\n    case LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case CLEAN_RTA:\n      return {\n        ...state,\n        rta: []\n      };\n    case CLEAN_DETAIL:\n      return {\n        ...state,\n        detail: {}\n      };\n    case CLEAN_FILTER:\n      return {\n        ...state,\n        filter_type: \"\",\n        filter_genre: \"\"\n      };\n    case RESET_FILTER:\n      return {\n        ...state,\n        filter_type: \"\",\n        filter_genre: \"\",\n        rta: state.allGames\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;\n\n// Helpers\n\nconst filterGenre = (arr, genre) => {\n  return arr.map(data => ({\n    ...data,\n    genres: data.genres.filter(g => g.name === genre)\n  })).filter(data => data.genres.length > 0);\n};\nconst filter = (state, filter_type, filter_genre) => {\n  let filters = [...state.allGames];\n  filters = filter_type === \"api\" ? filters.filter(data => !isNaN(data.id)) : filters.filter(data => isNaN(data.id));\n  filters = filter_genre ? filterGenre(filters, filter_genre) : filters;\n  return filters;\n};","map":{"version":3,"names":["GET_ALL_GAMES","GET_ALLGAMES_NAME","GET_DETAIL_GAMES","CLEAN_DETAIL","LOAD_GENRES","LOADING","ORDER_GAMES","FILTER_TYPE","FILTER_GENRES","CLEAN_FILTER","RESET_FILTER","CLEAN_RTA","initialState","allGames","genres","detail","loading","rta","filter_type","filter_genre","URL","reducer","state","arguments","length","undefined","action","type","payload","filtered_genres","filters","filter","genre","console","log","filteredResults","filterGenre","order","sort","a","b","id","arr","map","data","g","name","isNaN"],"sources":["C:/Users/CastroLuna/Documents/Desarrollo/B/PI/VIDEO_GAME_PAGE_PI/client/src/redux/reducer.js"],"sourcesContent":["import {\r\n  GET_ALL_GAMES,\r\n  GET_ALLGAMES_NAME,\r\n  GET_DETAIL_GAMES,\r\n  CLEAN_DETAIL,\r\n  LOAD_GENRES,\r\n  LOADING,\r\n  ORDER_GAMES,\r\n  FILTER_TYPE,\r\n  FILTER_GENRES,\r\n  CLEAN_FILTER,\r\n  RESET_FILTER,\r\n  CLEAN_RTA,\r\n} from \"./actions-types\";\r\n\r\nconst initialState = {\r\n  allGames: [],\r\n  genres: [],\r\n  detail: {},\r\n  loading: false,\r\n  rta: [],\r\n  filter_type: \"\",\r\n  filter_genre: \"\",\r\n  URL: 'http://localhost:3001/videogames'\r\n};\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_GAMES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        allGames: action.payload,\r\n        rta: action.payload,\r\n      };\r\n    case GET_ALLGAMES_NAME:\r\n      return {\r\n        ...state,\r\n        rta: action.payload,\r\n      };\r\n      \r\n    case GET_DETAIL_GAMES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rta: [],\r\n        filter_type: \"\",\r\n        filter_genre: \"\",\r\n        detail: action.payload,\r\n      };\r\n\r\n\r\n    case LOAD_GENRES:\r\n      return {\r\n        ...state,\r\n        genres: action.payload,\r\n        filtered_genres: action.payload,\r\n      };\r\n\r\n    case FILTER_TYPE: {\r\n      const filter_type = action.payload;\r\n      const filters = filter(state, filter_type, state.filter_genre);\r\n      return {\r\n        ...state,\r\n        rta: filters,\r\n        filter_type,\r\n      };\r\n    }\r\n\r\n    case FILTER_GENRES: {\r\n      const { genre } = action.payload;\r\n      console.log(genre)\r\n      const filteredResults = filter(state, state.filter_type, genre);\r\n      return {\r\n        ...state,\r\n        filteredResults,\r\n        filterGenre: genre,\r\n      };\r\n    }\r\n    \r\n\r\n    case ORDER_GAMES: {\r\n      const order = [...state.rta];\r\n\r\n      if (action.payload === \"Ascendente\") {\r\n        order.sort((a,b)=> a.id - b.id)\r\n      } else if(action.payload === \"Descendente\") {\r\n        order.sort((a,b)=> b.id - a.id)\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        rta: order,\r\n      };\r\n    }\r\n\r\n\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case CLEAN_RTA:\r\n      return {\r\n        ...state,\r\n        rta: [],\r\n      };\r\n    case CLEAN_DETAIL:\r\n      return {\r\n        ...state,\r\n        detail: {},\r\n      };\r\n    case CLEAN_FILTER:\r\n      return {\r\n        ...state,\r\n        filter_type: \"\",\r\n        filter_genre: \"\",\r\n      };\r\n    case RESET_FILTER:\r\n      return {\r\n        ...state,\r\n        filter_type: \"\",\r\n        filter_genre: \"\",\r\n        rta: state.allGames,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\n// Helpers\r\n\r\nconst filterGenre = (arr, genre) => {\r\n  return arr\r\n    .map((data) => ({\r\n      ...data,\r\n      genres: data.genres.filter((g) => g.name === genre),\r\n    }))\r\n    .filter((data) => data.genres.length > 0);\r\n};\r\n\r\nconst filter = (state, filter_type, filter_genre) => {\r\n  let filters = [...state.allGames];\r\n\r\n  filters = filter_type === \"api\" ? filters.filter((data) => !isNaN(data.id)) : filters.filter((data) => isNaN(data.id));\r\n\r\n  filters = filter_genre ? filterGenre(filters, filter_genre) : filters;\r\n\r\n  return filters;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}